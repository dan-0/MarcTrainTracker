/*
 * Copyright (c) 2019 IdleOffice Inc.
 *
 * build.gradle is part of MarcTrainTracker.
 *
 * MarcTrainTracker is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * MarcTrainTracker is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.idleoffice.marctrain"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 14
        versionName "1.14"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        manifestPlaceholders = [enableCrashlytics: "false"]
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
            manifestPlaceholders = [enableCrashlytics: "true"]
        }

        all {
            buildConfigField "String", "POLL_URL", "\"https://d2jr231zyecel4.cloudfront.net/\""
            buildConfigField "long", "ALERT_POLL_INTERVAL", "60000"
            buildConfigField "long", "ALERT_POLL_RETRY_INTERVAL", "10000"
            buildConfigField "long", "STATUS_POLL_INTERVAL", "60000"
            buildConfigField "long", "STATUS_POLL_RETRY_INTERVAL", "10000"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
    sourceSets {
        test {
            java.srcDirs += "$projectDir/src/testShared/java"
        }

        androidTest {
            java.srcDirs += "$projectDir/src/testShared/java"
        }
    }
}

configurations.all { config ->
    if (config.name.contains('UnitTest')) {
        config.resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
                details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.0'
    implementation "androidx.appcompat:appcompat:$androidXVersion"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0'
    testImplementation 'androidx.arch.core:core-testing:2.0.1'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.1.1'
    androidTestImplementation "androidx.test.ext:junit:$androidXTestVersion"
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
    androidTestImplementation "androidx.test:orchestrator:$androidXTestVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestVersion"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$archVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$archVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$archVersion"
    implementation "androidx.lifecycle:lifecycle-reactivestreams:$archVersion"

    // Crashlytics
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'
    implementation 'com.google.firebase:firebase-core:16.0.8'

    // DI

    //    implementation "org.koin:koin-android:1.0.2"
    implementation 'org.koin:koin-androidx-viewmodel:1.0.2'
    testImplementation "org.koin:koin-test:$koinVersion"

    // Timber for logging
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Moshi
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    // Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
}

apply plugin: 'com.google.gms.google-services'